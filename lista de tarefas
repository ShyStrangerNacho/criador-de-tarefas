<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Lista de Tarefas</title>
  <style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f0f0f0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }

    .container {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        width: 300px;
        overflow: hidden;

    }

    input {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        margin-bottom: 10px;
        box-sizing: border-box;
    }

    button {
        width: 100%;
        padding: 10px;
        background-color: #4CAF50;
        color: white;
        font-size: 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    li {
        padding: 10px;
        background-color: #eee;
        margin-bottom: 8px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    li:hover {
        background-color: #ddd;
    }

    li.delete-hover {
        background-color: #ff4d4d !important;
        color: white;
    }

    #deletar {
        width: 50%;
        padding: 10px;
        background-color: #a50c0c;
        color: white;
        font-size: 10px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        display: none; /* começa escondido */
    }

  </style>
</head>
<body>

  <div class="container">
    <input type="text" id="taskInput" placeholder="Digite uma tarefa...">
    <button id="addTaskBtn">Adicionar</button>
    <ul id="taskList"></ul>
    <button id="deletar">Limpar tudo</button>
  </div>


  <script>
    
    const taskInput = document.getElementById("taskInput");
    const addTaskBtn = document.getElementById("addTaskBtn");
    const taskList = document.getElementById("taskList");
    const deletar = document.getElementById("deletar");
    const container = document.querySelector(".container");
    
    // Recupera tarefas salvas do localStorage
    let savedTasks = JSON.parse(localStorage.getItem("tasks")) || [];
    
    function saveTasks() {
      localStorage.setItem("tasks", JSON.stringify(savedTasks));
    }

    // Campo de filtro (escondido por padrão)
    const filterInput = document.createElement("input");
    filterInput.type = "text";
    filterInput.id = "filterInput";
    filterInput.placeholder = "Filtrar tarefas...";
    filterInput.style.display = "none";
    container.insertBefore(filterInput, taskList);

    // Mostra/esconde filtro e botão "limpar tudo"
    function toggleControls() {
      if (savedTasks.length > 0) {
        filterInput.style.display = "block";
        deletar.style.display = "block";
      } else {
        filterInput.style.display = "none";
        deletar.style.display = "none";
      }
    }

    // Adiciona tarefa à lista
    function addTaskToList(taskText) {
      const li = document.createElement("li");
      li.textContent = taskText;

      li.addEventListener("mouseenter", () => li.classList.add("delete-hover"));
      li.addEventListener("mouseleave", () => li.classList.remove("delete-hover"));
      // Adiciona evento de clique para remover a tarefa
      li.addEventListener("click", () => {
        taskList.removeChild(li);
        const index = savedTasks.findIndex(task => task.texto === taskText);
        if (index > -1) {
          savedTasks.splice(index, 1);
          saveTasks();
          toggleControls();
        }
      });

      taskList.appendChild(li);
    }
    // Evento de clique para adicionar tarefa
    addTaskBtn.addEventListener("click", () => {
      const taskText = taskInput.value.trim();
      if (taskText !== "") {
        const novaTarefa = { texto: taskText };
        savedTasks.push(novaTarefa);
        saveTasks();
        addTaskToList(taskText);
        taskInput.value = "";
        taskInput.focus();
        toggleControls();
      }
    });
    // Permite adicionar tarefa pressionando "Enter"
    taskInput.addEventListener("keypress", function(event) {
      if (event.key === "Enter") addTaskBtn.click();
    });
    // Carrega tarefas salvas ao iniciar
    savedTasks.forEach(task => addTaskToList(task.texto));
    toggleControls();
    // Evento de clique para limpar todas as tarefas
    deletar.addEventListener("click", () => {
      savedTasks = [];
      saveTasks();
      taskList.innerHTML = "";
      toggleControls();
    });
    // Evento de input para filtrar tarefas
    filterInput.addEventListener("input", () => {
      const filterText = filterInput.value.toLowerCase();
      const filteredTasks = savedTasks.filter(task => task.texto.toLowerCase().includes(filterText));
      taskList.innerHTML = "";
      filteredTasks.forEach(task => addTaskToList(task.texto));
    });
    
    
    //====================================
    //cor aleatória ao carregar a página
    //====================================
    document.body.style.backgroundColor = randomColor(); 
    function randomColor() {
      const r = Math.floor(Math.random() * 256);
      const g = Math.floor(Math.random() * 256);
      const b = Math.floor(Math.random() * 256);
      return `rgb(${r}, ${g}, ${b})`;
    }

  </script>
</body>
</html>
